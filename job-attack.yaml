apiVersion: batch/v1
kind: Job
metadata:
  generateName: ${USER}-job-attack-${JOB_SUFFIX}
  labels:
    eidf/user: ${USER}
    kueue.x-k8s.io/queue-name: ${QUEUE_NAME}
    kueue.x-k8s.io/priority-class: batch-workload-priority
spec:
  completions: 1
  parallelism: 1
  completionMode: Indexed
  backoffLimit: 2147483647
  activeDeadlineSeconds: 864000
  template:
    metadata:
      labels:
        eidf/user: ${USER}
    spec:
      restartPolicy: OnFailure
      # Replace nodeSelector with affinity to allow multiple GPU types.
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: nvidia.com/gpu.product
                    operator: In
                    values:
                      - NVIDIA-H200
      # Add tolerations to allow scheduling on nodes with specific taints.
      tolerations:
        - key: "eidf098"
          operator: "Equal"
          value: "True"
          effect: "NoSchedule"
        - key: "eidf107"
          operator: "Equal"
          value: "True"
          effect: "NoSchedule"
      containers:
        - name: stylegan-fingerprint-attack
          image: kaiyaoed/my_app:latest  # Ensure CUDA version matches host drivers
          workingDir: "/workspace/authprint"
          env:
            - name: TORCH_NCCL_ASYNC_ERROR_HANDLING
              value: "1"
            - name: NCCL_DEBUG
              value: "INFO"
            - name: NCCL_IB_DISABLE
              value: "1"
            - name: MAX_DELTA
              value: "${MAX_DELTA}"
            - name: NCCL_IB_HCA
              value: "^mlx5"
            - name: PYTHONPATH
              value: "/workspace/authprint"
          command: ["/bin/bash", "-c"]
          args:
            - |
              echo "Setting up environment..."
              # Copy code from NFS to workspace
              echo "Copying code from NFS to workspace..."
              mkdir -p /workspace
              cp -r /nfs-user-107/authprint /workspace/
              
              # Create necessary directories in workspace
              mkdir -p /workspace/authprint/results
              mkdir -p /workspace/authprint/attack_results
              mkdir -p /workspace/authprint/attack_results/logs
              mkdir -p /workspace/authprint/evaluation_results
              mkdir -p /workspace/authprint/unified_attack_results
              mkdir -p /workspace/authprint/unified_attack_results/logs
              
              # Create symlinks to the expected locations
              mkdir -p /root/.cache/torch/hub/checkpoints
              ln -sf /nfs-user-107/authprint/pretrained_models/vgg16-397923af.pth /root/.cache/torch/hub/checkpoints/
              ln -sf /nfs-user-107/authprint/pretrained_models/weights-inception-2015-12-05-6726825d.pth /root/.cache/torch/hub/checkpoints/
              
              # Set Python path
              export PYTHONPATH=$PYTHONPATH:/workspace/authprint
              
              # Download pretrained models
              echo "Downloading pretrained models..."
              curl -o ffhq70k-paper256-ada.pkl "https://nvlabs-fi-cdn.nvidia.com/stylegan2-ada-pytorch/pretrained/paper-fig7c-training-set-sweeps/ffhq70k-paper256-ada.pkl"
              
              # Define common parameters for all runs
              TORCHRUN_CMD="torchrun --nproc_per_node=1 \
                          --nnodes=1 \
                          --node_rank=0 \
                          --master_addr=127.0.0.1 \
                          --master_port=12345"
              
              SCRIPT_ARGS="--attack_type baseline \
                          --checkpoint_path '/nfs-user-107/num_pixel_32/checkpoint_iter740000.pth' \
                          --num_samples 20 \
                          --detection_threshold 0.002883 \
                          --classifier_iterations 1000 \
                          --epsilon 2.0 \
                          --pgd_step_size 0.001 \
                          --pgd_steps 2000 \
                          --output_dir unified_attack_results \
                          --img_size 256"
              
              
              # Run attack 10 times
              for run in {1..10}; do
                echo "Starting attack run $run/10..."
                log_file="/workspace/authprint/attack_results/logs/run_${run}.log"
                
                # Run attack using torchrun for consistency with training
                (
                  echo "=== Attack Run $run/10 ===" 
                  echo "Started at: $(date)"
                  echo ""
                  
                  if [ $run -eq 1 ]; then
                    # Show full logs only for first run
                    eval "$TORCHRUN_CMD scripts/attack.py $SCRIPT_ARGS"
                  else
                    # Suppress torchrun logs for subsequent runs
                    eval "$TORCHRUN_CMD scripts/attack.py $SCRIPT_ARGS" > /dev/null 2>&1
                  fi
                  
                  echo ""
                  echo "Finished at: $(date)"
                  echo "Exit status: $?"
                ) 2>&1 | tee "$log_file"
                
                # Also append to a combined log file
                cat "$log_file" >> "/workspace/authprint/attack_results/logs/combined.log"
                echo -e "\n\n" >> "/workspace/authprint/attack_results/logs/combined.log"
                
                echo "Completed run $run/10. Logs saved to $log_file"
                echo "-------------------------------------------"
              done
              
              echo "All attack runs completed. Logs are available in /workspace/authprint/attack_results/logs/"
          resources:
            limits:
              nvidia.com/gpu: "1"
              cpu: "4"
              memory: "16Gi"
          volumeMounts:
            - name: nfs-user-107
              mountPath: /nfs-user-107
            - name: nfs-user-029
              mountPath: /nfs-user-029
            - name: dshm
              mountPath: /dev/shm
      volumes:
        - name: nfs-user-107
          nfs:
            server: 10.24.6.77
            path: /user/s2470447-eidf107
        - name: nfs-user-029
          nfs:
            server: 10.24.1.255
            path: /user/s2470447-infk8s
        - name: dshm
          emptyDir:
            medium: Memory
            sizeLimit: 16Gi 